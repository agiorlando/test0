swagger: '2.0'
info:
  version: '1.0'
  title: 'Transaction API'
  description: 'The public API for the test0 project'

host: "localhost:5500"
basePath: "/"
schemes:
  - "http"

tags:
  - name: "transactions"
    description: "Operations related to financial transactions"
  - name: "customers"
    description: "Operations related to managing users"

paths:
  /customers:
    put:
      tags:
        - customers
      summary: "Create a new customer"
      consumes:
        - "application/x-www-form-urlencoded"
      parameters:
        - name: firstName
          in: formData
          required: true
          type: string
        - name: lastName
          in: formData
          required: true
          type: string
        - name: email
          in: formData
          required: true
          type: string
        - name: country
          in: formData
          required: true
          type: string
        - name: gender
          in: formData
          required: true
          type: string
      responses:
        201:
          description: "Customer has been created successfully"
        400:
          description: "Customer not created due to client error"

  /customers/{customerId}:
    patch:
      tags:
        - customers
      summary: "Update an existing customer"
      consumes:
        - "application/x-www-form-urlencoded"
      parameters:
        - name: customerId
          in: path
          type: integer
          required: true
        - name: firstName
          in: formData
          type: string
        - name: lastName
          in: formData
          type: string
        - name: email
          in: formData
          type: string
        - name: country
          in: formData
          type: string
        - name: gender
          in: formData
          type: string
      responses:
        200:
          description: "Customer has been updated successfully"
        400:
          description: "Customer not updated due to client error"
        404:
          description: "Customer does not exist"

  /transactions:
    get:
      tags:
        - transactions
      summary: "Get a list of transactions"
      responses:
        200:
          description: "List of transactions has been retrieved successfully"

  /customers/{customerId}/transactions:
    put:
      tags:
        - transactions
      summary: "Create a new transaction"
      consumes:
        - "application/x-www-form-urlencoded"
      parameters:
        - name: customerId
          in: path
          required: true
          type: integer
        - name: amount
          in: formData
          required: true
          type: integer
      responses:
        201:
          description: "Transaction has been created successfully"
